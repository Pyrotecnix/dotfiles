---
- name: Install the required packages
  hosts: all
  vars:
    full_name: "Lucas Dohmen"
    email: "lucas@dohmen.io"
    url: "https://lucas.dohmen.io"

    go_version: 1.8.3
    nodejs_version: 8.x
    ruby_version: 2.4
    rust_version: 1.19.0

    apt_keys:
      - 'http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc'
      - 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key'
      - 'https://download.docker.com/linux/ubuntu/gpg'
    apt_repositories:
      - 'deb http://packages.erlang-solutions.com/ubuntu xenial contrib'
      - 'deb https://deb.nodesource.com/node_{{ nodejs_version }} xenial main'
      - 'deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable'
      - 'ppa:brightbox/ruby-ng'
      - 'ppa:jonathonf/vim'
    apt_packages:
      - build-essential
      - curl
      - docker-ce
      - elixir
      - git
      # - haskell-platform
      - htop
      - jq
      - nodejs
      - ragel
      - ruby-switch
      - ruby{{ ruby_version }}
      - ruby{{ ruby_version }}-dev
      - silversearcher-ag
      - tig
      - tmux
      - tree
      - vim
      - wget
      - xsel
      - xorg
      - youtube-dl
      - zsh
    vim_packages:
      editorconfig-vim: editorconfig/editorconfig-vim
      neomake: benekastah/neomake
      vim-colors-solarized: altercation/vim-colors-solarized
      vim-commentary: tpope/vim-commentary
      vim-pathogen: tpope/vim-pathogen
      vim-polyglot: sheerun/vim-polyglot
      vim-surround: tpope/vim-surround
      vim-repeat: tpope/vim-repeat
    npm_packages:
      - alex
    ruby_gems:
      - awesome_print
      - bundler
      - manpages
      - mdless
      - pry
      - tmuxinator
    cargo_packages:
      - cargo-outdated
      - rustfmt
      - ripgrep
    go_packages:
      - github/hub
    # cabal_packages:
      # - idris
    marks:
      c: /home/vagrant/Code
    spell_files:
      - en.utf-8.spl
      - en.utf-8.sug
      - de.utf-8.spl
      - de.utf-8.sug

  tasks:
    - name: Find all Dotfiles
      shell: ls -1 /vagrant/tilde
      register: dotfiles
    - name: Link Dotfiles
      file: path=/home/vagrant/.{{ item }} src=/vagrant/tilde/{{ item }} owner=vagrant group=vagrant state=link
      with_items: "{{ dotfiles.stdout_lines }}"

    - name: Add APT Keys
      apt_key: url="{{ item }}"
      with_items: "{{ apt_keys }}"
      become: true
    - name: Add APT Repositories
      apt_repository: repo="{{ item }}" state=present
      with_items: "{{ apt_repositories }}"
      become: true
    - apt: name=aptitude
      become: true
    - name: Update cache and upgrade
      apt: update_cache=yes upgrade=safe
      become: true
    - name: Install missing packages
      apt: name={{ item }}
      with_items: "{{ apt_packages }}"
      become: true

    - name: Set default shell for Vagrant user
      user: name=vagrant shell=/bin/zsh
      become: true
    - name: Install ZSH Syntax Highlighting
      git: repo=https://github.com/zsh-users/zsh-syntax-highlighting dest=/home/vagrant/.zsh/plugins/zsh-syntax-highlighting

    - name: Add the vagrant user to the docker group
      user:
        name: vagrant
        groups: docker
        append: yes
      become: true

    - name: Set the timezone
      command: timedatectl set-timezone Europe/Berlin
      become: true

    - name: Create the marks directory
      file: path=/home/vagrant/.marks state=directory
    - name: Configure the marks
      file: path=/home/vagrant/.marks/{{ item.key }} state=link src={{ item.value }} force=yes
      with_dict: "{{ marks }}"

    - name: Install default Ruby gems
      command: gem install {{ item }}
      with_items: "{{ ruby_gems }}"
      become: true

    - name: Install default NPM packages
      command: npm install -g {{ item }}
      with_items: "{{ npm_packages }}"
      become: true

    - command: npm set init-author-name "{{ full_name }}"
    - command: npm set init-author-email "{{ email }}"
    - command: npm set init-author-url "{{ url }}"

    - name: Install or update vim plugins
      git: repo=https://github.com/{{ item.value }} dest=/home/vagrant/.vim/bundle/{{ item.key }}
      with_dict: "{{ vim_packages }}"
    - file: path=/home/vagrant/.vim/spell state=directory
    - name: Install spell files for vim
      get_url: url=http://ftp.vim.org/pub/vim/runtime/spell/{{ item }} dest=/home/vagrant/.vim/spell/{{ item }}
      with_items: "{{ spell_files }}"

    # - name: Update Cabal
    #   command: cabal update
    # - name: Install Cabal packages
    #   command: cabal install {{ item }}
    #   with_items: "{{ cabal_packages }}"

    - name: Download Rust
      get_url: >
        url=https://static.rust-lang.org/dist/rust-{{ rust_version }}-x86_64-unknown-linux-gnu.tar.gz
        dest=/tmp/rust-{{ rust_version }}-x86_64-unknown-linux-gnu.tar.gz
    - name: Uncompress Rust archive
      unarchive: >
        src=/tmp/rust-{{ rust_version }}-x86_64-unknown-linux-gnu.tar.gz
        dest=/tmp
        copy=no
    - name: Install Rust
      command: "/tmp/rust-{{ rust_version }}-x86_64-unknown-linux-gnu/install.sh"
      args:
        creates: /usr/local/lib/rustlib/uninstall.sh
      become: true
    - name: Install Cargo packages
      command: cargo install --force {{ item }}
      with_items: "{{ cargo_packages }}"

    - name: Download go
      get_url: >
        url=https://storage.googleapis.com/golang/go{{ go_version }}.linux-amd64.tar.gz
        dest=/tmp/go{{ go_version }}.linux-amd64.tar.gz
    - name: Uncompress go archive
      unarchive: >
        src=/tmp/go{{ go_version }}.linux-amd64.tar.gz
        dest=/tmp
        copy=no
    - name: Install go
      command: cp -r /tmp/go /usr/local/go
      become: true
    - name: Install go packages
      command: /usr/local/go/bin/go get github.com/{{ item }}
      with_items: "{{ go_packages }}"
